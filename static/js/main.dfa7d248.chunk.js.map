{"version":3,"sources":["components/BlobViewer/Blob/Container.module.scss","components/BlobViewer/Path/Container.module.scss","views/BlobViewer.module.scss","components/BlobViewer/SideBar/TreeNode.module.scss","components/BlobViewer/SideBar/Container.module.scss","components/BlobViewer/Blob/useCodeMirror.js","components/BlobViewer/Blob/Container.js","utils/store.js","service/api/github.js","components/BlobViewer/NavBar/useLogin.js","components/BlobViewer/NavBar/Container.js","components/BlobViewer/Path/Container.js","components/BlobViewer/SideBar/TreeNode.js","components/BlobViewer/SideBar/useBlobTree.js","components/BlobViewer/SideBar/Container.js","views/BlobViewer.js","views/routes.js","views/Github.js","App.js","serviceWorker.js","index.js","components/BlobViewer/NavBar/Container.module.scss"],"names":["module","exports","useCodeMirror","props","textArea","codeMirrorRef","useRef","useEffect","current","CodeMirror","fromTextArea","mode","theme","smartIndent","lineWrapping","lineNumbers","readOnly","autofocus","Container","blob","type","code","window","atob","content","getDoc","setValue","className","styles","style","display","ref","store","getItem","key","value","localStorage","location","pathname","setItem","get","uri","a","async","opts","url","test","fetch","headers","Authorization","resp","ok","json","console","error","githubClient","user","token","orgs","tree","owner","repo","branch","recursive","blobUrl","useLogin","loginCallback","useState","setOwner","setToken","handleTokenChange","useCallback","e","target","login","setTimeout","logout","fetchData","tokenInput","placeholder","disabled","onChange","compButton","join","onClick","path","dirs","useMemo","split","map","dir","i","Fragment","slash","TreeNode","visitPath","onBlobClick","isCurrent","indexOf","paddingLeft","depth","name","subs","sub","useBlobTree","blobs","blobTree","root","forEach","parentPath","pos","lastIndexOf","slice","parent","find","treeNode","replace","push","defaultBlob","routes","component","setBlobs","setBlob","fetchTree","pathBlob","b","data","BlobViewer","sidebarWrapper","contentWrapper","Github","route","render","from","to","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfa7d248.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1xchs\",\"CodeMirror\":\"Container_CodeMirror__35fGV\",\"textArea\":\"Container_textArea__3rPsr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3yJhZ\",\"dir\":\"Container_dir__LCg2u\",\"slash\":\"Container_slash__2ed1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BlobViewer\":\"BlobViewer_BlobViewer__3TjFI\",\"sidebarWrapper\":\"BlobViewer_sidebarWrapper__1w6UP\",\"contentWrapper\":\"BlobViewer_contentWrapper__1s9ME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TreeNode\":\"TreeNode_TreeNode__3DTfP\",\"current\":\"TreeNode_current__3BBzQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__39U8O\"};","import { useEffect, useRef } from 'react';\nimport CodeMirror from 'codemirror';\n\nconst useCodeMirror = (props) => {\n  const { textArea } = props;\n\n  const codeMirrorRef = useRef(null);\n\n  useEffect(\n    () => {\n      if (codeMirrorRef.current && !textArea.current) {\n        return;\n      }\n      codeMirrorRef.current = CodeMirror.fromTextArea(\n        textArea.current,\n        {\n          mode: 'javascript',\n          theme: 'the-matrix',\n          smartIndent: true,\n          lineWrapping: true,\n          lineNumbers: true,\n          readOnly: true,\n          autofocus: true,\n        },\n      );\n    },\n    [textArea, codeMirrorRef],\n  );\n\n  return [\n    { codeMirrorRef },\n  ];\n};\n\nexport default useCodeMirror;\n","import React, { useEffect, useRef } from 'react';\nimport styles from './Container.module.scss';\nimport useCodeMirror from './useCodeMirror';\n\nconst Container = (props) => {\n  const { blob } = props;\n\n  const textArea = useRef(null);\n\n  const [{ codeMirrorRef }] = useCodeMirror({ textArea });\n\n  useEffect(\n    () => {\n      if (blob.type !== 'blob') {\n        return;\n      }\n\n      const code = window.atob(blob.content);\n      codeMirrorRef.current && codeMirrorRef.current.getDoc().setValue(code);\n    },\n    [codeMirrorRef, blob],\n  );\n\n  return (\n    <main className={styles.Container}>\n      <div\n        className={styles.CodeMirror}\n        style={blob.type === 'blob' ? {} : { display: 'none'}}\n      >\n        <textarea className={styles.textArea} ref={textArea} />\n      </div>\n    </main>\n  );\n};\n\nexport default Container;\n","const store = {\n  getItem: (key, value = null) => window.localStorage.getItem(`${window.location.pathname}:${key}`) || value,\n  setItem: (key, value) => window.localStorage.setItem(`${window.location.pathname}:${key}`, value),\n};\n\nexport default store;\n","import store from '../../utils/store';\n\nconst get = async (uri, opts = {}) => {\n  const url = /^https:/.test(uri) ? uri : `https://api.github.com${uri}`;\n  try {\n    const resp = await window.fetch(\n      url,\n      {\n        headers: {\n          Authorization: `token ${store.getItem('token')}`,\n          ...opts.headers,\n        },\n      },\n    );\n    return resp.ok ? resp.json() : null;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n\nconst createGithubClient = () => {\n  const user = async (token) => {\n    return get('/user', {\n      headers: { Authorization: `token ${token}`},\n    });\n  };\n\n  const orgs = async () => {\n    return get('/user/orgs');\n  };\n\n  const tree = async (owner, repo, branch, recursive = true) => {\n    return get(`/repos/${owner}/${repo}/git/trees/${branch}${recursive ? '?recursive=1' : ''}`);\n  };\n\n  const blob = async (blobUrl) => {\n    return get(blobUrl);\n  };\n\n  return {\n    user,\n    orgs,\n    tree,\n    blob,\n  };\n};\n\nconst githubClient = createGithubClient();\n\nexport default githubClient;","import { useCallback, useState } from 'react';\nimport store from '../../../utils/store';\nimport githubClient from '../../../service/api/github';\n\nconst useLogin = (props) => {\n  const { loginCallback } = props;\n\n  const [owner, setOwner] = useState(null);\n  const [token, setToken] = useState(store.getItem('token', ''));\n\n  const handleTokenChange = useCallback(\n    (e) => {\n      setToken(e.target.value);\n    },\n    [setToken],\n  );\n\n  const login = useCallback(\n    async () => {\n      const user = await githubClient.user(token);\n      if (user) {\n        store.setItem('token', token);\n        setOwner(user);\n        setTimeout(loginCallback, 0);\n      }\n    },\n    [token, setOwner, loginCallback],\n  );\n\n  const logout = useCallback(\n    () => {\n      setOwner(null);\n    },\n    [setOwner],\n  );\n\n  return [\n    {\n      owner,\n      token,\n    },\n    {\n      handleTokenChange,\n      login,\n      logout,\n    },\n  ];\n};\n\nexport default useLogin;\n","import React from 'react';\nimport styles from './Container.module.scss';\nimport useLogin from './useLogin';\n\nconst Container = (props) => {\n  const { fetchData } = props;\n\n  const [\n    {\n      owner,\n      token,\n    },\n    {\n      handleTokenChange,\n      login,\n      logout,\n    },\n  ] = useLogin({ loginCallback: fetchData });\n\n  return (\n    <div className={styles.Container}>\n      <input\n        className={styles.tokenInput}\n        type=\"text\"\n        placeholder=\"Personal Access Token\"\n        disabled={owner !== null}\n        onChange={handleTokenChange}\n        value={token}\n      />\n      {owner\n        ? (\n          <>\n            <div className={styles.owner}>{owner.login}</div>\n            <div\n              className={[styles.logout, styles.compButton].join(' ')}\n              onClick={logout}\n            >\n              Log Out\n            </div>\n          </>\n        )\n        : (\n          <div\n            className={[styles.login, styles.compButton].join(' ')}\n            onClick={login}\n          >\n            Log In\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useMemo } from 'react';\nimport styles from './Container.module.scss';\n\nconst Container = (props) => {\n  const { path } = props;\n\n  const dirs = useMemo(\n    () => path.split('/'),\n    [path],\n  );\n\n  return (\n    <div className={styles.Container}>\n      {dirs.map((dir, i) => (\n        <React.Fragment key={`${i}${dir}`}>\n          <div className={styles.dir}>{dir}</div>\n          <div className={styles.slash}>&#47;</div>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useCallback, useMemo } from 'react';\nimport styles from './TreeNode.module.scss';\n\nconst TreeNode = (props) => {\n  const { tree, blob, visitPath } = props;\n\n  const onBlobClick = useCallback(\n    () => visitPath(tree.path),\n    [tree, visitPath],\n  );\n\n  const isCurrent = useMemo(\n    () => blob.path.indexOf(tree.path) === -1,\n    [blob, tree],\n  );\n\n  return (\n    <>\n      <div\n        className={[\n          styles.TreeNode,\n          isCurrent ? '':  styles.current,\n        ].join(' ')}\n        onClick={onBlobClick}\n        style={{paddingLeft: `${0.5 * tree.depth}rem`}}\n      >\n        {tree.name}\n      </div>\n      {tree.subs.map((sub) => (\n        <TreeNode\n          key={sub.path}\n          tree={sub}\n          blob={blob}\n          visitPath={visitPath}\n        />\n      ))}\n    </>\n  )\n}\n\nexport default TreeNode;\n","import { useMemo } from 'react';\n\nconst useBlobTree = (props) => {\n  const { blobs } = props;\n\n  const blobTree = useMemo(\n    () => {\n      const root = {\n        path: '/',\n        name: '/',\n        subs: [],\n        depth: 0,\n      };\n      const dirs = [root];\n      blobs.forEach((blob) => {\n        let parentPath = null;\n        const pos = blob.path.lastIndexOf('/');\n        if (pos === -1) {\n          parentPath = '/';\n        } else {\n          parentPath = blob.path.slice(0, pos)\n        }\n        const parent = dirs.find((dir) => dir.path === parentPath);\n\n        const treeNode = {\n          ...blob,\n          name: blob.path.replace(/^.+\\//, ''),\n          subs: [],\n          depth: parent.depth + 1,\n        };\n        parent.subs.push(treeNode);\n        if (blob.type === 'tree') {\n          dirs.push(treeNode);\n        }\n      });\n      return root;\n    },\n    [blobs],\n  );\n\n  return [\n    { blobTree },\n  ];\n};\n\nexport default useBlobTree;","import React from 'react';\nimport TreeNode from './TreeNode';\nimport styles from './Container.module.scss';\nimport useBlobTree from './useBlobTree';\n\nconst Container = (props) => {\n  const { blobs, blob, visitPath } = props;\n\n  const [{ blobTree }] = useBlobTree({ blobs });\n\n  return (\n    <div className={styles.Container}>\n      <TreeNode\n        tree={blobTree}\n        blob={blob}\n        visitPath={visitPath}\n      />\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useCallback, useState } from 'react';\nimport Blob from '../components/BlobViewer/Blob/Container';\nimport NavBar from '../components/BlobViewer/NavBar/Container';\nimport Path from '../components/BlobViewer/Path/Container';\nimport SideBar from '../components/BlobViewer/SideBar/Container';\nimport githubClient from '../service/api/github';\nimport styles from './BlobViewer.module.scss';\n\nconst defaultBlob = {\n  path: '/',\n  name: '/',\n  subs: [],\n  depth: 0,\n};\n\nconst BlobViewer = () => {\n  const [owner] = useState('mpan-wework');\n  const [repo] = useState('github');\n  const [branch] = useState('master');\n  const [blobs, setBlobs] = useState([]);\n  const [blob, setBlob] = useState(defaultBlob);\n\n  const fetchTree = useCallback(\n    async () => {\n      const tree = await githubClient.tree(owner, repo, branch);\n      setBlobs(tree.tree);\n    },\n    [owner, repo, branch, setBlobs],\n  )\n\n  const fetchData = useCallback(\n    async () => {\n      await githubClient.orgs();\n      setTimeout(() => fetchTree(), 0);\n    },\n    [fetchTree],\n  );\n\n  const visitPath = useCallback(\n    async (path) => {\n      const pathBlob = blobs.find((b) => b.path === path);\n      if (pathBlob) {\n        const data = await githubClient.blob(pathBlob.url);\n        setBlob({ ...pathBlob, ...data, path })\n      } else {\n        setBlob(defaultBlob)\n      }\n    },\n    [blobs, setBlob],\n  );\n\n  return (\n    <div className={styles.BlobViewer}>\n      <div className={styles.sidebarWrapper}>\n        <SideBar\n          blobs={blobs}\n          blob={blob}\n          visitPath={visitPath}\n        />\n      </div>\n      <div className={styles.contentWrapper}>\n        <NavBar fetchData={fetchData} />\n        <Path\n          path={blob.path || ''}\n          visitPath={visitPath}\n        />\n        <Blob blob={blob} />\n      </div>\n    </div>\n  );\n};\n\nexport default BlobViewer;\n","import BlobViewer from './BlobViewer';\n\nconst routes = [\n  {\n    path: '/blob-viewer',\n    component: BlobViewer,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport routes from './routes';\n\nconst Github = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        {routes.map((route) => (\n          <Route\n            key={route.path}\n            path={route.path}\n            render={(props) => <route.component {...props} />}\n          />\n        ))}\n        <Redirect from=\"*\" to=\"/blob-viewer/\"/>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Github;\n","import React from 'react';\nimport Github from './views/Github';\n\nconst App = () => <Github />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.info(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.info('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n          || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.info(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/codemirror/lib/codemirror.css';\nimport '../node_modules/codemirror/theme/the-matrix.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__13MpU\",\"tokenInput\":\"Container_tokenInput__2uTiS\",\"owner\":\"Container_owner__1gdhJ\",\"logout\":\"Container_logout__1fklQ\",\"login\":\"Container_login__z05_i\",\"compButton\":\"Container_compButton__3MFji\"};"],"sourceRoot":""}